---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title} description={entry.data.description}>
  <article class="blog-post">
    <header class="post-header">
      {entry.data.image && (
        <img src={entry.data.image} alt={entry.data.title} class="post-image" />
      )}
      <div class="post-meta">
        {entry.data.mood && (
          <span class="mood-badge">{entry.data.mood}</span>
        )}
        <time>{new Date(entry.data.pubDate).toLocaleDateString()}</time>
      </div>
      <h1>{entry.data.title}</h1>
      {entry.data.description && (
        <p class="post-description">{entry.data.description}</p>
      )}
      {entry.data.perspective && (
        <div class="perspective-indicator">
          <strong>Exploring:</strong> {entry.data.perspective}
        </div>
      )}
    </header>

    {entry.data.audioUrl && (
      <div class="audio-player-wrapper">
        <div class="audio-header">
          <h3>ðŸŽ§ Listen to this perspective</h3>
          <p>Prefer to listen? Here's the audio version of this post.</p>
        </div>
        <audio controls preload="metadata">
          <source src={entry.data.audioUrl} type="audio/wav" />
          <source src={entry.data.audioUrl.replace('.wav', '.mp3')} type="audio/mpeg" />
          Your browser does not support the audio element.
        </audio>
      </div>
    )}

    <div class="post-content">
      <Content />
    </div>

    {entry.data.tags && entry.data.tags.length > 0 && (
      <footer class="post-footer">
        <div class="tags">
          {entry.data.tags.map(tag => (
            <span class="tag">#{tag}</span>
          ))}
        </div>
      </footer>
    )}
  </article>
</Layout>

<style>
  .blog-post {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }

  .post-header {
    margin-bottom: 3rem;
    text-align: center;
  }

  .post-image {
    width: 100%;
    max-width: 600px;
    height: auto;
    border-radius: 12px;
    margin-bottom: 2rem;
    box-shadow: 0 8px 30px rgba(0,0,0,0.1);
  }

  .post-meta {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
    font-size: 0.875rem;
  }

  .mood-badge {
    background: linear-gradient(135deg, var(--sage-green) 0%, var(--sage-muted) 100%);
    color: white;
    padding: 0.4rem 1rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 500;
    font-style: italic;
    letter-spacing: 0.02em;
    text-shadow: 0 1px 2px rgba(0,0,0,0.1);
  }

  .post-meta time {
    color: var(--shadow-subtle);
  }

  .blog-post h1 {
    font-family: 'Playfair Display', serif;
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--charcoal-dark);
    margin-bottom: 1rem;
    line-height: 1.2;
    letter-spacing: -0.02em;
  }

  .post-description {
    font-size: 1.125rem;
    color: var(--shadow-subtle);
    font-style: italic;
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  .perspective-indicator {
    background: linear-gradient(135deg, var(--cream-warm) 0%, var(--mist-light) 100%);
    padding: 1rem 1.5rem;
    border-radius: 12px;
    font-style: italic;
    color: var(--steel-blue);
    border-left: 4px solid var(--sage-green);
    margin-bottom: 2rem;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(90, 107, 93, 0.15);
  }

  .audio-player-wrapper {
    margin: 2rem 0;
    padding: 1.5rem;
    background: linear-gradient(135deg, var(--cream-warm) 0%, var(--mist-light) 100%);
    border-radius: 12px;
    border: 1px solid rgba(90, 107, 93, 0.1);
    box-shadow: 0 4px 16px rgba(0,0,0,0.05);
  }

  .audio-header {
    margin-bottom: 1rem;
    text-align: center;
  }

  .audio-header h3 {
    font-family: 'Playfair Display', serif;
    font-size: 1.25rem;
    color: var(--charcoal-dark);
    margin: 0 0 0.5rem 0;
  }

  .audio-header p {
    color: var(--shadow-subtle);
    font-size: 0.9rem;
    margin: 0;
    font-style: italic;
  }

  .audio-player-wrapper audio {
    width: 100%;
    height: 40px;
    border-radius: 8px;
    outline: none;
  }

  .audio-player-wrapper audio::-webkit-media-controls-panel {
    background-color: var(--sage-green);
    border-radius: 8px;
  }

  .post-content {
    line-height: 1.7;
    font-size: 1.1rem;
    color: var(--charcoal-light);
  }

  .post-content :global(h1),
  .post-content :global(h2),
  .post-content :global(h3) {
    font-family: 'Playfair Display', serif;
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: var(--charcoal-dark);
    font-weight: 600;
    line-height: 1.3;
  }

  .post-content :global(p) {
    margin-bottom: 1.5rem;
  }

  .post-content :global(img) {
    width: 100%;
    height: auto;
    border-radius: 8px;
    margin: 2rem 0;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
  }

  .post-footer {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid rgba(90, 107, 93, 0.2);
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  .tag {
    background: var(--mist-light);
    color: var(--steel-blue);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 500;
    border: 1px solid rgba(90, 107, 93, 0.1);
    transition: all 0.3s ease;
  }

  .tag:hover {
    background: linear-gradient(135deg, var(--sage-green), var(--steel-blue));
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(90, 107, 93, 0.25);
  }

  @media (max-width: 768px) {
    .blog-post {
      padding: 1rem;
    }

    .blog-post h1 {
      font-size: 2rem;
    }

    .post-meta {
      flex-direction: column;
      gap: 0.5rem;
    }
  }
</style>